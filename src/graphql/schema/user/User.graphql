type Query {
  getAllUser: [User]
  getUserById(id: Int!): User
  existCafeNameInUser(id:Int! cafe_name: String!): User
  getUserByName(name: String!): User
}

type Mutation {
  getKakaoUserByJwt(jwt: String!): AuthUser
  authUser: AuthUser
  saveCardToUser(id: Int!, cafe_name: String!, code: String! card_img: String!): User
  editProfile(profile: Profile): Boolean!

  getUserByIdMutation(id: Int!): User
}

type AuthUser {
  user: User!,
  jwt: String!
}

type User {
  _id: ID,
  id: Int!,
  name: String!,
  nickname: String,
  email: String!,
  auth: String!,
  point: Int!,
  profile_img: String,
  rating: String!,
  review_count: Int!,
  cafe_list: [QR],
  average_star: Float,
  home_tag_list: [String],
  map_tag_list: [String],
  member: Int,
}

# 유저 하위 데이터 (소지한 카드 정보) #
type QR {
  cafe_name: String!,
  code: String!,
  card_img: String!,
  visit_times: Int,
}

input Profile {
  nickname: String,
  file: [Upload]
}
